#include<bits/stdc++.h>
using namespace std;
//to judge whether the current scale is balanced and update the weight with the summary weight of the two sides of the scale
bool is_balanced(int &weight){
	int w1, d1, w2, d2;
	scanf("%d%d%d%d", &w1, &d1, &w2, &d2);
	bool left_balanced, right_balanced;
	if(!w1) left_balanced = is_balanced(w1);
	else left_balanced = true;
	if(!w2) right_balanced = is_balanced(w2);
	else right_balanced = true;
	weight = w1 + w2;
	return left_balanced && right_balanced && w1 * d1 == w2 * d2;
}

int main()
{
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	int kase;
	scanf("%d", &kase);
	int weight;
	while(kase--){
		if(is_balanced(weight)) printf("YES\n");
		else printf("NO\n");
		if(kase) putchar('\n');
	}
	
	//printf("Total time: %.3f s.\n", (double)clock()/CLOCKS_PER_SEC);
	return 0;
}
