#include<stdio.h>
#include<time.h>

int r, c;
char table[12][12];

int main()
{
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	int count = 0;
	while(++count, 1 == scanf("%d", &r) && r){
		//input
		scanf("%d", &c);
		for(int i = 0; i < r; i++)
			scanf("%s", table[i]);
		//		for(int i = 0; i < r; i++)
		//			printf("%s\n", table[i]);
		//find eligible grid
		int gridpos[100][2];
		int ptr = 0;
		for(int i = 0; i < r; i++){
			for(int j = 0; j < c; j++){
				if((j == 0 || i == 0) && table[i][j] != '*') gridpos[ptr][0] = i, gridpos[ptr][1] = j, ptr++;
				else if(table[i][j] != '*' && ((j > 0 && table[i][j-1] == '*') || (i > 0 && table[i-1][j] == '*'))){
					gridpos[ptr][0] = i, gridpos[ptr][1] = j, ptr++;
				}
			}
		}
		//print the title
		if(count - 1) printf("\npuzzle #%d:\n", count);
		else printf("puzzle #%d:\n", count);
		//print the results
		printf("Across\n");
		for(int i = 0; i < ptr; i++){
			if(gridpos[i][1] == 0 || table[gridpos[i][0]][gridpos[i][1] - 1] == '*'){
				//print the word
				printf("%3d.", i + 1);
				for(int j = gridpos[i][1]; j < c && table[gridpos[i][0]][j] != '*'; j++){
					putchar(table[gridpos[i][0]][j]);
				}
				putchar('\n');
			}
		}
		printf("Down\n");
		for(int i = 0; i < ptr; i++){
			if(gridpos[i][0] == 0 || table[gridpos[i][0] - 1][gridpos[i][1]] == '*'){
				//print the word
				printf("%3d.", i + 1);
				for(int j = gridpos[i][0]; j < r && table[j][gridpos[i][1]] != '*'; j++){
					putchar(table[j][gridpos[i][1]]);
				} 
				putchar('\n');
			}
		}
	}
	//printf("Total time: %.4f s.", (double)clock()/CLOCKS_PER_SEC); 
	return 0;
}
